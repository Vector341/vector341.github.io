(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{357:function(e,r,t){"use strict";t.r(r);var n=t(4),o=Object(n.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("记录本周内浏览学习的各类知识")]),e._v(" "),r("h2",{attrs:{id:"新闻类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#新闻类"}},[e._v("#")]),e._v(" 新闻类")]),e._v(" "),r("h3",{attrs:{id:"nginx-宣布代码仓库迁移至-github"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nginx-宣布代码仓库迁移至-github"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://mailman.nginx.org/pipermail/nginx-announce/2024/ITL3AOQSAJANFJXMM3VOVOIGOUADWFFK.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nginx 宣布代码仓库迁移至 Github"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("2024/09/06 Nginx 将其代码仓库由 Mercurial 迁移至 Github, 仓库地址：https://github.com/nginx/nginx")]),e._v(" "),r("h2",{attrs:{id:"博客类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#博客类"}},[e._v("#")]),e._v(" 博客类")]),e._v(" "),r("h3",{attrs:{id:"为什么我们需要-interdiff-的代码评审"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么我们需要-interdiff-的代码评审"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://gist.github.com/thoughtpolice/9c45287550a56b2047c6311fbadebed2",target:"_blank",rel:"noopener noreferrer"}},[e._v("为什么我们需要 interdiff 的代码评审"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("对 Gerrit 代码评审工作流的介绍，并对比 Github 代码评审的流程，展示了两者的优劣。")]),e._v(" "),r("h3",{attrs:{id:"windows-nt-vs-unix-从系统设计角度对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#windows-nt-vs-unix-从系统设计角度对比"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://blogsystem5.substack.com/p/windows-nt-vs-unix-design",target:"_blank",rel:"noopener noreferrer"}},[e._v("Windows NT vs. Unix: 从系统设计角度对比"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("作者是 Unix 的开发者和长期使用者，在加入微软后希望深入了解 Windows NT 的设计。本文是他从系统设计角度对比了 Windows NT 和 Unix 的不同之处，包括文件系统、进程管理、网络协议等方面。")]),e._v(" "),r("h3",{attrs:{id:"使用-service-worker-优化-web-性能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用-service-worker-优化-web-性能"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://philipwalton.com/articles/smaller-html-payloads-with-service-workers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 Service Worker 优化 web 性能"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("使用 Service Worker 除了可以缓存 web 页面和静态资源外，还可以通过编程的方式控制响应结果。作者将自己的博客内容拆分成三部分：shell-start, content, shell-end，实现了更精确的缓存策略，同时还使用 Stream 的方式进一步加快了页面渲染速度。文章的代码主要使用 Service Work 的工具库 "),r("a",{attrs:{href:"https://developers.google.com/web/tools/workbox/",target:"_blank",rel:"noopener noreferrer"}},[e._v("workbox"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("strong",[e._v("相关链接")])]),e._v(" "),r("ul",[r("li",[e._v("Mozilla 的 Service Worker 教程：https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers")]),e._v(" "),r("li",[e._v("Chrome Developers 文档：https://developer.chrome.com/docs/workbox/service-worker-overview/")])])])}),[],!1,null,null,null);r.default=o.exports}}]);