(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{362:function(a,e,t){"use strict";t.r(e);var s=t(4),r=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("在运行 Ubuntu 的云主机上搭建一个网站并完成 HTTPS 签名")]),a._v(" "),e("h3",{attrs:{id:"准备工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[a._v("#")]),a._v(" 准备工作")]),a._v(" "),e("ul",[e("li",[a._v("一台拥有公网 IP 的云主机。（这里以 Amazon EC2 为例）")]),a._v(" "),e("li",[a._v("一个域名（配置解析到上面的公网 IP）")])]),a._v(" "),e("h2",{attrs:{id:"正式开始"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正式开始"}},[a._v("#")]),a._v(" 正式开始")]),a._v(" "),e("h3",{attrs:{id:"搭建-web-服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#搭建-web-服务器"}},[a._v("#")]),a._v(" 搭建 web 服务器")]),a._v(" "),e("p",[a._v("想要获取证书完成签名流程，首先需要一个正常工作的 web 服务器。使用 Apache 默认配置即可")]),a._v(" "),e("h3",{attrs:{id:"获取证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取证书"}},[a._v("#")]),a._v(" 获取证书")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://letsencrypt.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("LetsEncrypt"),e("OutboundLink")],1),a._v(" 提供免费的 SSL 证书，它借助 ACME 协议完成域名签名。支持 ACME 的客户端有很多，这里以")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/acmesh-official/acme.sh",target:"_blank",rel:"noopener noreferrer"}},[e("code",[a._v("acme.sh")]),e("OutboundLink")],1),a._v(" 为例。")]),a._v(" "),e("p",[a._v("确保 apache 服务器正常运行，执行以下命令在 staging 环境中测试配置的正确性：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" acme.sh "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--issue")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--server")]),a._v(" letsencrypt "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--test")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" vector341.com "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w")]),a._v(" /var/www/html "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--keylength")]),a._v(" ec-256\n")])])]),e("p",[a._v("执行这个命令后，服务器上的 acme agent 会首先生成一对密钥，保存私钥后将公钥发送给 Let's Encrypt 的服务器。Let's Encrypt 服务器会返回一个 nonce，agent 使用私钥签名后放入 web 服务器的根目录下。之后，Let's Encrypt 访问你提供的域名，用公钥确认 nonce 以及签名的正确性。")]),a._v(" "),e("p",[a._v("在 staging 环境测试完成后即可正式签名：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" acme.sh "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--issue")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--server")]),a._v(" letsencrypt "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" vector341.com "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w")]),a._v(" /var/www/html "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--keylength")]),a._v(" ec-256 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--force")]),a._v("\n\n")])])]),e("h4",{attrs:{id:"工作原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[a._v("#")]),a._v(" 工作原理")]),a._v(" "),e("p",[a._v("Let's Encrypt 使用 ACME 协议来证明一个服务器确实拥有这个域名，上述的创建资源是一种证明方法，详细的交互步骤见：https://letsencrypt.org/how-it-works/")]),a._v(" "),e("h3",{attrs:{id:"安装证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装证书"}},[a._v("#")]),a._v(" 安装证书")]),a._v(" "),e("p",[a._v("将证书、私钥和证书链安装到指定位置，在 Ubuntu 中通常是 "),e("code",[a._v("/etc/ssl/certs")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("acme.sh "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--installcert")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" vector341.com --cert-file /etc/ssl/certs/letsencrypt-cert.crt --key-file /etc/ssl/private/letsencrypt-cert.key --fullchain-file /etc/apache2/ssl.crt/letsencrypt-fullchain.crt "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ecc")]),a._v("\n")])])]),e("h3",{attrs:{id:"配置-https-服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-https-服务器"}},[a._v("#")]),a._v(" 配置 https 服务器")]),a._v(" "),e("p",[a._v("以 apache 的默认 ssl 配置 "),e("code",[a._v("/etc/apache2/site-available/default-ssl.conf")]),a._v(" 为例，修改以下三项的配置：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   A self-signed (snakeoil) certificate can be created by installing")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   the ssl-cert package. See")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   /usr/share/doc/apache2/README.Debian.gz for more info.")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   If both key and certificate are stored in the same file, only the")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   SSLCertificateFile directive is needed.")]),a._v("\n        SSLCertificateFile      /etc/ssl/certs/letsencrypt-cert.crt\n        SSLCertificateKeyFile   /etc/ssl/private/letsencrypt-cert.key\n\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   Server Certificate Chain:")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   Point SSLCertificateChainFile at a file containing the")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   concatenation of PEM encoded CA certificates which form the")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   certificate chain for the server certificate. Alternatively")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   the referenced file can be the same as SSLCertificateFile")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   when the CA certificates are directly appended to the server")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#   certificate for convinience.")]),a._v("\n        SSLCertificateChainFile /etc/apache2/ssl.crt/letsencrypt-fullchain.crt\n")])])]),e("p",[a._v("修改配置后启用 ssl 模块和 virtual host，重启 apache2 即可：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" a2enmod ssl\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" a2ensite default-ssl.conf\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl restart apache2\n")])])]),e("blockquote",[e("p",[a._v("其实这里也提示了可以用 ssl-cert 生成自签名的证书：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" make-ssl-cert generate-default-snakeoil\n")])])]),e("p",[a._v("生成的私钥位于："),e("code",[a._v("/etc/ssl/private/ssl-cert-snakeoil.key")]),a._v("\n生成的证书："),e("code",[a._v("/etc/ssl/certs/ssl-cert-snakeoil.pem")])])]),a._v(" "),e("h2",{attrs:{id:"ssl-签名与加密的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssl-签名与加密的原理"}},[a._v("#")]),a._v(" SSL 签名与加密的原理")]),a._v(" "),e("p",[a._v("在密码学中，签名与加密是一对互逆的过程：")]),a._v(" "),e("ul",[e("li",[a._v("签名：使用私钥与原始数据运算得到签名，使用公钥验证数据完整性（integrity）")]),a._v(" "),e("li",[a._v("加密：使用公钥与原始数据运算得到密文，使用密钥确保数据私密性（encryption）")])]),a._v(" "),e("p",[a._v("其中原始数据一般是文件的哈希值，签名时公钥常被包含在原始文件中一起签名。")]),a._v(" "),e("h3",{attrs:{id:"详细过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#详细过程"}},[a._v("#")]),a._v(" 详细过程")]),a._v(" "),e("p",[a._v("OpenSSL 库提供了丰富的工具，我们可以实际探究签名或加密的过程")]),a._v(" "),e("h4",{attrs:{id:"_1-生成私钥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-生成私钥"}},[a._v("#")]),a._v(" 1. 生成私钥")]),a._v(" "),e("p",[a._v("私钥用于对数据进行签名。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("\nopenssl genpkey "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-algorithm")]),a._v(" RSA "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-out")]),a._v(" private_key.pem\n")])])]),e("h4",{attrs:{id:"_2-提取公钥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-提取公钥"}},[a._v("#")]),a._v(" 2. 提取公钥")]),a._v(" "),e("p",[a._v("用私钥生成公钥，用于签名验证。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("\nopenssl rsa "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-in")]),a._v(" private_key.pem "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-pubout")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-out")]),a._v(" public_key.pem\n")])])]),e("h4",{attrs:{id:"_3-创建示例数据文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建示例数据文件"}},[a._v("#")]),a._v(" 3.创建示例数据文件")]),a._v(" "),e("p",[a._v("创建一个包含要签名数据的简单文本文件。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello, this is a test message."')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" data.txt\n")])])]),e("h4",{attrs:{id:"_4-对数据文件进行签名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-对数据文件进行签名"}},[a._v("#")]),a._v(" 4.对数据文件进行签名")]),a._v(" "),e("p",[a._v("使用私钥创建签名。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("\nopenssl dgst "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-sha256")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-sign")]),a._v(" private_key.pem "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-out")]),a._v(" signature.bin data.txt\n")])])]),e("p",[a._v("参数说明：")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-sha256")]),a._v("：指定哈希函数，一般签名是针对文件的哈希值")])]),a._v(" "),e("p",[a._v("signature.bin 即是文件 data.txt 的签名")]),a._v(" "),e("h4",{attrs:{id:"_5-验证签名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-验证签名"}},[a._v("#")]),a._v(" 5.验证签名")]),a._v(" "),e("p",[a._v("OpenSSL 提供了工具用于验证签名")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("openssl dgst -sha256 -verify public_key.pem -signature signature.bin data.txt\n")])])]),e("p",[a._v("我们也可以参考验证的步骤手动完成上述步骤，更好地理解如何验证签名。")]),a._v(" "),e("ol",[e("li",[a._v("使用相同的哈希算法（SHA-256）对原始数据文件 ("),e("code",[a._v("data.txt")]),a._v(") 进行哈希计算。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ sha256sum data.txt\n21dae1f57aab6196019a38338f4270afa4060461725c852a07fccf735f80c28d  data.txt\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[a._v("使用"),e("strong",[a._v("公钥")]),a._v("解密 "),e("code",[a._v("signature.bin")]),a._v(" 以获取原始哈希值。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ openssl rsautl -verify -inkey public_key.pem -pubin -in signature.bin -out decrypted.bin\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[a._v("如果"),e("strong",[a._v("两个哈希值匹配")]),a._v("，则数据被验证为真实且未被篡改。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ tail -c 32 decrypted.bin > extracted_hash.bin\n$ hexdump -C extracted_hash.bin\n00000000  21 da e1 f5 7a ab 61 96  01 9a 38 33 8f 42 70 af  |!...z.a...83.Bp.|\n00000010  a4 06 04 61 72 5c 85 2a  07 fc cf 73 5f 80 c2 8d  |...ar\\.*...s_...|\n00000020\n")])])]),e("p",[a._v("RSA 签名使用的哈希结果为 32 字节，"),e("code",[a._v("tail -c 32")]),a._v(" 用于去除解密数据中的 "),e("strong",[a._v("ASN.1 Header")]),a._v("，提取最后 32 字节的哈希值")]),a._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),e("ol",[e("li",[a._v("Mozilla 的一个网站，用于生成现代的 HTTPS 配置：https://ssl-config.mozilla.org/")]),a._v(" "),e("li",[a._v("同样是 Mozilla 的网站，用于评价 HTTPS 网站的安全性：https://developer.mozilla.org/en-US/observatory")]),a._v(" "),e("li",[a._v("SSL 证书信任链的工作原理：https://knowledge.digicert.com/solution/how-certificate-chains-work")])])])}),[],!1,null,null,null);e.default=r.exports}}]);